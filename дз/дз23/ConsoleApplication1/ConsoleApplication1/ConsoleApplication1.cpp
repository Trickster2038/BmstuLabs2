// ConsoleApplication1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;

int main()
{
	FILE* f, * g;
	char* s1;
	fopen_s(&f, "f.dat", "w+t");
	fopen_s(&g, "g.dat", "w+t");
	s1 = new char[50];
	*s1 = ' ';
	puts("Enter string 1");
	s1 = gets_s(s1, 50);
	for (int i = 0; i < strlen(s1); i++) {
		putc(s1[i], f);
	}
	puts("Enter string 2");
	s1 = gets_s(s1, 50);
	for (int i = 0; i < strlen(s1); i++) {
		putc(s1[i], g);
	}
	rewind(f);
	rewind(g);

	char ch1, ch2;
	int n = -1;
	int k = 1;
	bool fl = false;
	ch1 = getc(f);
	ch2 = getc(g);
	while ((ch1 != EOF) && (ch2 != EOF) && (ch1 == ch2)) {
		k++;
		ch1 = getc(f);
		ch2 = getc(g);
		if (ch1 != ch2) {
			fl = true;
		}
	}

	if (ch1 != ch2) {
		fl = true;
	}
	if (fl) {
		printf("Mismatch on symb: %d", k);
	}
	else {
		puts("Files matches");
	}
	fclose(f);
	fclose(g);
	delete[] s1;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
